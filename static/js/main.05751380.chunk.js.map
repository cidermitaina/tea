{"version":3,"sources":["images/ReadingSideDoodle.svg","themes/size.ts","components/Layout/Header/Hamburger.tsx","components/Layout/Header/Header.tsx","components/Layout/Layout.tsx","components/shared/Heading/Heading.tsx","components/shared/Text/Text.tsx","components/App/Top/Top.tsx","components/Layout/MainVisual/MainVisual.tsx","components/shared/Tag/Tag.tsx","components/shared/List/List.tsx","components/Layout/TeaContents/TeaContents.tsx","data/greenTea/greenTea.ts","components/App/GreenTea/GreenTea.tsx","data/blackTea/blackTea.ts","components/App/BlackTea/BlackTea.tsx","data/teaCup/teaCup.ts","components/App/TeaCup/TeaCup.tsx","components/App/Contact/ContactContents.tsx","components/App/Contact/Contact.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","space","xxs","SPACE_BASE","xs","s","m","l","xl","xxl","font","mediaQuery","Hamburger","isShow","onClickHamburger","MenuIcon","className","onClick","Lines","styled","div","Header","props","setState","state","this","menus","Wrapper","NavList","map","menu","key","name","to","url","React","Component","header","ul","Layout","children","Main","Footer","main","footer","Heading","tag","type","as","h1","fontSize","p","size","css","Top","src","mv","alt","MainContents","Contents","TextWrapper","HeadingText","lang","MainVisual","section","bgColor","Tag","tags","Item","li","List","teas","tea","href","target","rel","Figcaption","figcaption","TeaContents","heading","greenTeas","process","GreenTea","blackTeas","BlackTea","teaCup","TeaCup","ContactContents","snsLinks","FaRegGrinAlt","FaGithubAlt","FaTwitter","FaInstagram","FaBookOpen","FaHeart","onClickHeart","console","log","join","snsLink","index","Link","Button","a","button","Contact","GlobalStyle","createGlobalStyle","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05751380.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ReadingSideDoodle.cc5e7586.svg\";","const SPACE_BASE = 8\n\nexport const space = {\n  xxs: `${SPACE_BASE * 0.1}rem`,\n  xs: `${SPACE_BASE * 0.2}rem`,\n  s: `${SPACE_BASE * 0.3}rem`,\n  m: `${SPACE_BASE * 0.4}rem`,\n  l: `${SPACE_BASE * 0.5}rem`,\n  xl: `${SPACE_BASE * 0.6}rem`,\n  xxl: `${SPACE_BASE * 0.7}rem`,\n}\n\nexport const font = {\n  xxs: '1.1rem',\n  xs: '1.4rem',\n  s: '1.6rem',\n  m: '1.8rem',\n  l: '2.4rem',\n  xl: '3.2rem',\n}\n\nexport const mediaQuery = {\n  sp: 768,\n  tablet: 959,\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { mediaQuery } from '../../../themes/size'\n\ninterface Props {\n  isShow: boolean\n  onClickHamburger: () => void\n}\n\nexport const Hamburger: React.FC<Props> = ({ isShow, onClickHamburger }) => {\n  return (\n    <MenuIcon className={isShow ? 'burger burger-squeeze open' : 'burger burger-squeeze'} onClick={onClickHamburger}>\n      <Lines className=\"burger-lines\"></Lines>\n    </MenuIcon>\n  )\n}\n\nconst MenuIcon = styled.div`\n  height: 3em;\n  width: 3em;\n  position: relative;\n  font-size: 12px;\n  cursor: pointer;\n  transition: 0.2s all;\n  transform: scale(0.8, 0.8);\n  margin: 0 auto;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    position: fixed;\n    right: 2rem;\n    top: 2rem;\n  }\n\n  &::after {\n    content: '';\n    display: block;\n    position: absolute;\n    height: 150%;\n    width: 150%;\n    top: -25%;\n    left: -25%;\n  }\n\n  &.open {\n    .burger-lines {\n      &,\n      &:after,\n      &:before {\n        transition: .2s background-color, .2s top, .2s left, .2s transform .15s;\n      }\n      & {\n        background-color: transparent;\n      }\n      &:before,\n      &:after {\n        left: 0.5em;\n        top: 0px;\n      }\n      &:before {\n        transform: rotate(-45deg);\n      }\n      &:after {\n        transform: rotate(45deg);\n      }\n    }\n  }\n}\n`\n\nconst Lines = styled.div`\n  top: 50%;\n  margin-top: -0.125em;\n  background-color: #333;\n\n  &,\n  ::before,\n  ::after {\n    pointer-events: none;\n    display: block;\n    content: '';\n    width: 100%;\n    border-radius: 0.25em;\n    height: 0.25em;\n    position: absolute;\n    transform: rotate(0);\n    background-color: #333;\n    transition: 0.2s top 0.2s, 0.1s left, 0.2s transform, 0.4s background-color 0.2s;\n  }\n\n  &::after,\n  &::before {\n    width: 2em;\n  }\n\n  &::after {\n    left: 0;\n    top: -1em;\n  }\n\n  &::before {\n    left: 1em;\n    top: 1em;\n  }\n`\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport { Hamburger } from './Hamburger'\nimport { space, font, mediaQuery } from '../../../themes/size'\n\ninterface menus {\n  name: string\n  url: string\n}\n\ninterface Props {\n  menus: menus[]\n}\n\nexport interface State {\n  isShow: boolean\n}\n\nexport class Header extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props)\n\n    this.state = {\n      isShow: false,\n    }\n  }\n  public render() {\n    const { isShow } = this.state\n    const { menus } = this.props\n\n    return (\n      <Wrapper>\n        <nav>\n          <Hamburger isShow={isShow} onClickHamburger={this.onClickHamburger} />\n          <NavList className={isShow ? 'open' : ''}>\n            {menus.map(menu => (\n              <li key={menu.name}>\n                <Link to={menu.url}>{menu.name}</Link>\n              </li>\n            ))}\n          </NavList>\n        </nav>\n      </Wrapper>\n    )\n  }\n\n  private onClickHamburger = () => {\n    this.setState({ isShow: !this.state.isShow })\n  }\n}\n\nconst Wrapper = styled.header`\n  @import url('https://fonts.googleapis.com/css?family=Hind&display=swap');\n\n  font-family: 'Hind', sans-serif;\n  font-weight: bold;\n  letter-spacing: 2px;\n  margin-left: auto;\n  position: absolute;\n  left: 50%;\n  top: ${space.m};\n  transform: translateX(-50%);\n  z-index: 1;\n  text-align: center;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    position: fixed;\n    width: 100%;\n    top: 0;\n  }\n`\n\nconst NavList = styled.ul`\n  max-height: 0;\n  overflow: hidden;\n  transition: max-height 0.5s;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    background-color: #fff;\n  }\n\n  &.open {\n    /* TODO: JSで高さ取得、アニメーションの調節 */\n    max-height: 500px;\n    transition: max-height 0.7s;\n  }\n\n  & > li {\n    padding: 0 8px;\n    margin: ${space.m} 0;\n  }\n  & a {\n    color: #333;\n    font-size: ${font.s};\n    position: relative;\n    display: inline-block;\n\n    &::after {\n      position: absolute;\n      bottom: -6px;\n      left: 0;\n      content: '';\n      width: 100%;\n      height: 2px;\n      background: #333;\n      transform: scale(0, 1);\n      transform-origin: left top;\n      transition: transform 0.3s;\n    }\n\n    @media screen and (min-width: ${mediaQuery.sp}px) {\n      &:hover::after {\n        transform: scale(1, 1);\n      }\n    }\n  }\n`\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nimport { Header } from './Header'\nimport { mediaQuery } from '../../themes/size'\n\ninterface Props {\n  children?: React.ReactNode[]\n  color?: string\n}\n\nexport const Layout: React.FC<Props> = ({ children }) => {\n  const menus = [\n    { name: 'Top', url: '/' },\n    { name: 'Black Tea', url: '/blacktea' },\n    { name: 'Green Tea', url: '/greentea' },\n    { name: 'Tea Cup', url: '/teacup' },\n    { name: 'Contact', url: '/contact' },\n  ]\n\n  return (\n    <Wrapper>\n      <Header menus={menus} />\n      <Main>{children}</Main>\n      <Footer></Footer>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  height: 100%;\n`\n\nconst Main = styled.main`\n  display: flex;\n  align-items: center;\n  height: 100%;\n  z-index: 0;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    display: block;\n  }\n`\n\nconst Footer = styled.footer``\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { font, mediaQuery } from '../../../themes/size'\n\nexport interface HeadingProps {\n  children: React.ReactNode\n  type?: 'screenTitle' | 'sectionTitle' | 'blockTitle' | 'subBlockJaTitle' | 'subBlockTitle'\n  tag?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6'\n  className?: string\n}\n\nexport const Heading: React.FC<HeadingProps> = ({ tag = 'h1', type = 'ScreenTitle', className = '', children }) => {\n  return (\n    <Wrapper as={tag} className={`${type} ${className}`}>\n      {children}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.h1`\n  @import url('https://fonts.googleapis.com/css?family=Hind&display=swap');\n\n  font-weight: bold;\n  &.headTitle {\n    font-size: ${font.xl};\n    font-weight: normal;\n    font-family: 'Sawarabi Mincho', sans-serif;\n\n    @media screen and (max-width: ${mediaQuery.sp}px) {\n      font-size: ${font.l};\n    }\n  }\n  &.sectionTitle {\n    font-size: ${font.xl};\n    letter-spacing: 5px;\n  }\n  &.blockTitle {\n    font-size: ${font.l};\n    letter-spacing: 2px;\n  }\n  &.subBlockJaTitle {\n    font-size: ${font.m};\n    font-family: 'Sawarabi Mincho', sans-serif;\n    letter-spacing: 2px;\n  }\n  &.subBlockTitle {\n    font-size: ${font.m};\n    letter-spacing: 2px;\n  }\n`\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { font } from '../../../themes/size'\n\ninterface Props {\n  children: React.ReactNode\n  className?: string\n  size?: 'xxs' | 'xs' | 's' | 'm' | 'l' | 'xl'\n  lang?: 'en' | 'ja'\n}\n\nconst fontSize = {\n  xxs: font.xxs,\n  xs: font.xs,\n  s: font.s,\n  m: font.m,\n  l: font.l,\n  xl: font.xl,\n}\n\nexport const Text: React.FC<Props> = ({ className = '', size = 's', lang = 'en', children }) => (\n  <Wrapper size={size} className={`${lang} ${className}`}>\n    {children}\n  </Wrapper>\n)\n\nconst Wrapper = styled.p`\n  ${({ size = 's' }: Props) => css`\n    font-size: ${fontSize[size]};\n  `};\n  line-height: 1.4;\n  &.ja {\n    font-family: 'Sawarabi Mincho', sans-serif;\n  }\n`\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nimport { Layout } from '../../Layout'\nimport { Heading } from '../../shared/Heading'\nimport { Text } from '../../shared/Text'\nimport { space, mediaQuery } from '../../../themes/size'\nimport mv from '../../../images/ReadingSideDoodle.svg'\n\nexport const Top: React.FC<{}> = () => {\n  return (\n    <Layout>\n      <MainVisual>\n        <img src={mv} alt=\"mainvisual\" />\n      </MainVisual>\n      <MainContents>\n        <Contents>\n          <Heading className=\"headTitle\">お茶の時間にしませんか</Heading>\n          <TextWrapper>\n            <HeadingText lang=\"ja\" size=\"s\">\n              一期一会とは茶道におけるお茶会の心得です。\n            </HeadingText>\n            <HeadingText lang=\"ja\" size=\"s\">\n              「人との出会いを一生に一度のものと思い、相手に対し最善を尽くしながらお茶を点てること」を意味しています。\n            </HeadingText>\n            <HeadingText lang=\"ja\" size=\"s\">\n              お気に入りのお茶を集めてみました。\n            </HeadingText>\n            <HeadingText lang=\"ja\" size=\"s\">\n              大切な誰かに心を込めてお茶を淹れてみませんか？\n            </HeadingText>\n          </TextWrapper>\n        </Contents>\n      </MainContents>\n    </Layout>\n  )\n}\n\nconst MainVisual = styled.div`\n  width: 50%;\n  text-align: center;\n  background-color: #f5efe0;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    width: 100%;\n  }\n\n  > img {\n    width: 60%;\n\n    @media screen and (max-width: ${mediaQuery.sp}px) {\n      width: 70%;\n    }\n  }\n`\n\nconst MainContents = styled.div`\n  width: 50%;\n  height: 100%;\n  color: #fff;\n  background-color: tan;\n  position: relative;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    width: 100%;\n  }\n`\n\nconst Contents = styled.section`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  flex-direction: column;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    padding: 0 ${space.xs};\n  }\n`\n\nconst TextWrapper = styled.div`\n  width: 70%;\n  padding-top: ${space.m};\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    width: 90%;\n  }\n`\n\nconst HeadingText = styled(Text)`\n  padding-top: ${space.s};\n  line-height: 1.6;\n`\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Heading } from '../../shared/Heading'\nimport { mediaQuery } from '../../../themes/size'\n\ninterface Props {\n  bgColor: string\n}\n\nexport const MainVisual: React.FC<Props> = ({ bgColor, children }) => {\n  return (\n    <Wrapper bgColor={bgColor}>\n      <Heading className=\"sectionTitle\" tag=\"h1\">\n        {children}\n      </Heading>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 50%;\n  text-align: center;\n  ${({ bgColor }: Props) => css`\n    background-color: ${bgColor};\n  `}\n  height: 100%;\n  color: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    width: 100%;\n  }\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Tea } from '../../../types/application'\nimport { space, font } from '../../../themes/size'\n\ninterface Props {\n  tags: Tea['tags']\n}\n\nexport const Tag: React.FC<Props> = ({ tags }) => {\n  return (\n    <Wrapper>\n      {tags.map(tag => (\n        <Item key={tag}># {tag}</Item>\n      ))}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.ul`\n  padding-top: ${space.xxs};\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst Item = styled.li`\n  font-size: ${font.xs};\n  color: #666;\n  padding-top: 3px;\n  &:not(:first-child) {\n    padding-left: ${space.xxs};\n  }\n`\n","import React from 'react'\nimport styled, { css } from 'styled-components'\n\nimport { Tea } from '../../../types/application'\nimport { Tag } from '../../shared/Tag'\nimport { space, font, mediaQuery } from '../../../themes/size'\n\ninterface Props {\n  className?: string\n  teas: Tea[]\n  lang?: string\n}\n\nexport const List: React.FC<Props> = ({ className = '', teas, lang = 'en' }) => {\n  return (\n    <Wrapper className={className}>\n      {teas.map(tea => (\n        <li key={tea.name}>\n          <a href={tea.href} target=\"_blank\" rel=\"noopener noreferrer\">\n            <figure>\n              <img src={tea.src} alt={tea.alt} />\n              <Figcaption lang={lang}>{tea.name}</Figcaption>\n            </figure>\n          </a>\n          <Tag tags={tea.tags} />\n        </li>\n      ))}\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  padding-top: ${space.xl};\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    display: block;\n  }\n\n  a {\n    display: block;\n    transition: 0.3s all;\n\n    @media screen and (min-width: ${mediaQuery.sp}px) {\n      &:hover {\n        opacity: 0.7;\n      }\n    }\n  }\n  & > li {\n    width: 50%;\n    padding: ${space.xs};\n    box-sizing: border-box;\n\n    @media screen and (max-width: ${mediaQuery.sp}px) {\n      width: 100%;\n    }\n  }\n\n  img {\n    width: 100%;\n  }\n`\n\nconst Figcaption = styled.figcaption`\n  font-weight: bold;\n  padding-top: ${space.xs};\n  line-height: 1.4;\n  font-size: ${font.xs};\n  text-align: left;\n  ${props =>\n    props.lang === 'ja' &&\n    css`\n      font-family: 'Sawarabi Mincho', sans-serif;\n    `};\n`\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Tea } from '../../../types/application'\nimport { List } from '../../shared/List'\nimport { Heading } from '../../shared/Heading'\nimport { space, mediaQuery } from '../../../themes/size'\n\ninterface Props {\n  teas: Tea[]\n  lang?: string\n  heading?: string\n}\n\nexport const TeaContents: React.FC<Props> = ({ teas, lang, heading = 'Tea List' }) => {\n  return (\n    <Wrapper>\n      <Contents>\n        <Heading tag=\"h2\" className=\"blockTitle\">\n          {heading}\n        </Heading>\n        <List teas={teas} lang={lang} />\n      </Contents>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 50%;\n  height: 100%;\n  background-color: #f5efe0;\n  overflow-y: scroll;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    width: 100%;\n    overflow-y: visible;\n    height: auto;\n  }\n`\n\nconst Contents = styled.div`\n  width: 85%;\n  padding: ${space.xl} 0;\n  margin: 0 auto;\n`\n","import { Tea } from '../../types/application'\n\nexport const greenTeas: Tea[] = [\n  {\n    name: '東京茶寮 005 OKUMIDORI おくみどり',\n    href: 'https://www.tokyosaryo.jp/',\n    src: `${process.env.PUBLIC_URL}/images/okumidori.jpg`,\n    alt: '東京茶寮',\n    tags: ['東京茶寮', '煎茶'],\n  },\n  {\n    name: 'うちの茶舗 ほうじ茶',\n    href: 'https://uchino-chaho.com/',\n    src: `${process.env.PUBLIC_URL}/images/uchinochaho.jpg`,\n    alt: 'うちの茶舗',\n    tags: ['うちの茶舗', 'ほうじ茶'],\n  },\n]\n","import React from 'react'\n\nimport { Layout } from '../../Layout'\nimport { MainVisual } from '../../Layout/MainVisual'\nimport { TeaContents } from '../../Layout/TeaContents'\n\nimport { greenTeas } from '../../../data/greenTea'\n\nexport const GreenTea: React.FC<{}> = () => {\n  return (\n    <Layout>\n      <MainVisual bgColor=\"#8fbc8f\">Japanese Tea</MainVisual>\n      <TeaContents teas={greenTeas} lang=\"ja\" />\n    </Layout>\n  )\n}\n","import { Tea } from '../../types/application'\n\nexport const blackTeas: Tea[] = [\n  {\n    name: 'Fortnum & Mason / ROYAL BLEND',\n    href: 'https://fortnumandmason.co.jp/',\n    src: `${process.env.PUBLIC_URL}/images/fortnumandmason.jpg`,\n    alt: 'fortnumandmason',\n    tags: ['Fortnum & Mason', 'British'],\n  },\n  {\n    name: 'MARIAGE FRÈRES / EARL GREY IMPERIAL',\n    href: 'http://www.mariagefreres.co.jp/',\n    src: `${process.env.PUBLIC_URL}/images/mariagefreres.jpg`,\n    alt: 'mariagefreres',\n    tags: ['MARIAGE FRÈRES', 'Earl Grey', 'France'],\n  },\n  {\n    name: 'Bünting Tee / C.K. Privat',\n    href: 'https://www.buenting-tee.de/',\n    src: `${process.env.PUBLIC_URL}/images/buntingtee.jpg`,\n    alt: 'buntingtee',\n    tags: ['Bünting Tee', 'Germany'],\n  },\n  {\n    name: 'SUKI TEA / EARLGREY BLUEFLOWER',\n    href: 'https://suki-tea.com/',\n    src: `${process.env.PUBLIC_URL}/images/suki.jpg`,\n    alt: 'suki',\n    tags: ['SUKI TEA', 'Earl Grey', 'British'],\n  },\n  {\n    name: 'Navarasa / fruits rouges',\n    href: 'http://shop.leafull.co.jp/html/newpage.html?code=24',\n    src: `${process.env.PUBLIC_URL}/images/navarasa.jpg`,\n    alt: 'navarasa',\n    tags: ['Navarasa', 'Dessert tea', ' Japan'],\n  },\n  {\n    name: 'Whittard / CHRISTMAS TEA',\n    href: 'https://www.whittard.co.uk',\n    src: `${process.env.PUBLIC_URL}/images/whittard.jpg`,\n    alt: 'whittard',\n    tags: ['Whittard', 'Christmas Tea', ' British'],\n  },\n  {\n    name: 'NEWBY / EARL GREY',\n    href: 'https://newby-j.jimdo.com/products/',\n    src: `${process.env.PUBLIC_URL}/images/newby.jpg`,\n    alt: 'newby',\n    tags: ['NEWBY', 'Earl Grey', 'British'],\n  },\n]\n","import React from 'react'\n\nimport { Layout } from '../../Layout'\nimport { TeaContents } from '../../Layout/TeaContents'\nimport { MainVisual } from '../../Layout/MainVisual'\n\nimport { blackTeas } from '../../../data/blackTea'\n\nexport const BlackTea: React.FC<{}> = () => {\n  return (\n    <Layout>\n      <MainVisual bgColor=\"#e9967a\">Black Tea</MainVisual>\n      <TeaContents teas={blackTeas} />\n    </Layout>\n  )\n}\n","import { Tea } from '../../types/application'\n\nexport const teaCup: Tea[] = [\n  {\n    name: 'Burleigh / Burgess Chintz',\n    href: 'https://tasman-inter.net/?mode=cate&cbid=990417&csid=4',\n    src: `${process.env.PUBLIC_URL}/images/burgess_chintz.jpg`,\n    alt: 'burgesschintz',\n    tags: ['Burleigh', 'Burgess Chintz', 'British'],\n  },\n  {\n    name: 'Burleigh / Red Calico',\n    href: 'https://tasman-inter.net/?mode=cate&cbid=990417&csid=1',\n    src: `${process.env.PUBLIC_URL}/images/red_calico.jpg`,\n    alt: 'redcalico',\n    tags: ['Burleigh', 'Calico', 'British'],\n  },\n]\n","import React from 'react'\n\nimport { Layout } from '../../Layout'\nimport { TeaContents } from '../../Layout/TeaContents'\nimport { MainVisual } from '../../Layout/MainVisual'\n\nimport { teaCup } from '../../../data/teaCup'\n\nexport const TeaCup: React.FC<{}> = () => {\n  return (\n    <Layout>\n      <MainVisual bgColor=\"#add8e6\">Tea Cup</MainVisual>\n      <TeaContents teas={teaCup} heading=\"Tea Cup List\" />\n    </Layout>\n  )\n}\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport { Heading } from '../../shared/Heading'\nimport { space, mediaQuery } from '../../../themes/size'\n\nimport { FaRegGrinAlt, FaGithubAlt, FaTwitter, FaInstagram, FaBookOpen, FaHeart } from 'react-icons/fa'\n\nexport const ContactContents: React.FC<{}> = () => {\n  const snsLinks = [\n    { name: FaRegGrinAlt, url: 'https://cidermitaina.github.io/' },\n    { name: FaGithubAlt, url: 'https://github.com/cidermitaina' },\n    { name: FaTwitter, url: 'https://twitter.com/cidermitaina' },\n    { name: FaInstagram, url: 'https://www.instagram.com/stsiiii/' },\n    { name: FaBookOpen, url: 'http://cidermitaina.hatenablog.com/' },\n    { name: FaHeart, url: '' },\n  ]\n\n  const onClickHeart = () => {\n    var style = ['font-size: 2em;', 'color: white;', 'padding: 2px;', 'background: #ffa07a']\n    console.log(\"%cThank you ! \\nLet's have a relaxing time over tea　ʕ•̫͡•ʔ\", style.join(''))\n  }\n  return (\n    <Wrapper>\n      <Contents>\n        <Heading tag=\"h2\" className=\"subBlockTitle\">\n          cidermitaina\n        </Heading>\n        <List>\n          {snsLinks.map((snsLink, index) => (\n            <li key={index}>\n              {snsLink.url ? (\n                <Link href={snsLink.url}>\n                  <snsLink.name />\n                </Link>\n              ) : (\n                <Button type=\"button\" onClick={onClickHeart}>\n                  <snsLink.name />\n                </Button>\n              )}\n            </li>\n          ))}\n        </List>\n      </Contents>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  width: 50%;\n  height: 100%;\n  background-color: #f5efe0;\n\n  @media screen and (max-width: ${mediaQuery.sp}px) {\n    width: 100%;\n  }\n`\n\nconst Contents = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  flex-direction: column;\n`\n\nconst List = styled.ul`\n  padding-top: ${space.s};\n  display: flex;\n\n  > li {\n    padding: ${space.xxs};\n  }\n`\n\nconst Link = styled.a`\n  transition: 0.3s all;\n\n  @media screen and (min-width: ${mediaQuery.sp}px) {\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n\n  > svg {\n    color: #777;\n    width: 32px;\n    height: 32px;\n  }\n`\nconst Button = styled.button`\n  transition: 0.3s all;\n  border: none;\n  cursor: pointer;\n  background: none;\n  padding: 0;\n\n  @media screen and (min-width: ${mediaQuery.sp}px) {\n    &:hover {\n      opacity: 0.7;\n    }\n  }\n\n  &:focus {\n    outline: 0;\n  }\n\n  > svg {\n    color: #777;\n    width: 32px;\n    height: 32px;\n  }\n`\n","import React from 'react'\n\nimport { Layout } from '../../Layout'\nimport { ContactContents } from './ContactContents'\nimport { MainVisual } from '../../Layout/MainVisual'\n\nexport const Contact: React.FC<{}> = () => {\n  return (\n    <Layout>\n      <MainVisual bgColor=\"#d2b48c\">Contact</MainVisual>\n      <ContactContents />\n    </Layout>\n  )\n}\n","import * as React from 'react'\nimport { createGlobalStyle } from 'styled-components'\nimport { Reset } from 'styled-reset'\nimport { Redirect, Route, Switch } from 'react-router'\n\nimport { Top } from './components/App/Top'\nimport { GreenTea } from './components/App/GreenTea'\nimport { BlackTea } from './components/App/BlackTea'\nimport { TeaCup } from './components/App/TeaCup'\nimport { Contact } from './components/App/Contact'\n\nconst App: React.FC<{}> = () => (\n  <>\n    <Reset />\n    <GlobalStyle />\n    <Switch>\n      <Route exact path=\"/\" component={Top} />\n      <Route path=\"/greentea\" component={GreenTea} />\n      <Route path=\"/blacktea\" component={BlackTea} />\n      <Route path=\"/teacup\" component={TeaCup} />\n      <Route path=\"/contact\" component={Contact} />\n      <Redirect to=\"/\" />;\n    </Switch>\n  </>\n)\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css?family=Hind&display=swap');\n@import url('https://fonts.googleapis.com/css?family=Sawarabi+Gothic|Sawarabi+Mincho&display=swap');\n\n  html {\n    height: 100%;\n    font-family: 'Hind', sans-serif;\n    font-size: 62.5%;\n    color: #333;\n  }\n\n  body {\n    height: 100%;\n  }\n\n  a {\n    text-decoration: none;\n    color: #333;\n  }\n\n  #root {\n    height: 100%;\n  }\n`\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root'),\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}